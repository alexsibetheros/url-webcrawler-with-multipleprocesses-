#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "core.h"
#include "list.h"
#include "hash.h"
#include "queue.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
core_point initiate_core(int t_size,int m_size)/*Run at start of main*/
{
	core_point main_core= malloc( 1*sizeof(CORE) );
	main_core->hash_table=create_table(t_size);//Create Hash Table
	main_core->table_size=t_size; //Hash Table Size
	main_core->total =0; //Total url's passed to children
	main_core->max =m_size; //Max number Of Url's 
	main_core->queue=NULL; //Queue started as empty
	return main_core;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void destroy_core(core_point my_core)
{
	delete_hash(my_core);
	ClearQueue(my_core->queue);
	free(my_core->hash_table);
	free(my_core);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void add_url(core_point my_core,char* get_url){ //Function that tries to add url to hash+queue
	
	if( check_url(my_core,  get_url) ){//Checks to see if url already exist in hash
		return ;
	}
	//If unique url, increase total, calculate spot in hash table, add to hash and finally add to queue
	my_core->total++; 
	int place=hash_function(get_url,my_core->table_size);
	insert_into_hash(my_core, get_url, place );
	my_core->queue=AddItem (my_core->queue,  get_url);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void print_poll(u_info* pack){//debugging function that prints info package
	printf("\nPrinting URL INFO STRUCT!\n");
	printf("-->Total Url [%d]\n",pack->total_url);
	printf("-->Total Img [%d]\n",pack->total_img);
	printf("-->Total Size [%d]\n",pack->total_size);
	printf("-->Cpu Time [%lf]\n",pack->Ctime);	
	printf("-->Real Time [%lf]\n",pack->Rtime);
	printf("-->URL Type [%s]\n\n",pack->type);
						
}


